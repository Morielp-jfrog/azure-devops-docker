# Docker

# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

##
trigger:
- main
pool:
      name: default
parameters:
- name: prodName
  displayName: Product to Build
  type: string
  default: 'nginx'
- name: registry
  displayName: Registry Hostname
  type: string
  default: test.jfrog.io'
- name: targetRepo
  displayName: Target Repo to push to
  type: string
  default: 'k-docker'

variables:
  prodName: ${{ parameters.prodName }}
  registry: ${{ parameters.registry }}
  targetRepo: ${{ parameters.targetRepo }}
  buildContext: 'test-$(prodName)'
  imageNameTb: '$(registry)/$(targetRepo)/test-$(prodName)'
  imageNameBase: '$(registry)/$(targetRepo)/$(prodName)'


steps:
  - task: JFrogDocker@1
    inputs:
      command: 'Pull'
      artifactoryConnection: 'kimt'
      imageName: '$(imageNameBase)'
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      includeEnvVars: true
      skipLogin: false
  - task: Docker@2
    displayName: Build an image
    inputs:
      command: build
      dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
      tags: |
        $(tag)

  - task: JFrogDocker@1
    inputs:
      command: 'Push'
      artifactoryConnection: 'kimt'
      imageName: '$(imageNameTb):$(Build.BuildNumber)'
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      includeEnvVars: true
      threads: '3'
      skipLogin: false
  - task: JFrogPublishBuildInfo@1
    inputs:
      artifactoryConnection: 'kimt'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
  - task: JFrogBuildScan@1
    inputs:
      xrayConnection: 'kimt-xray'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      allowFailBuild: true
      vuln: true




